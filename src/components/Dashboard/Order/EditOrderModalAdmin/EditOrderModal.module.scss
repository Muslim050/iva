.modalWindow {
  padding: 20px;

  &__label {
    margin-bottom: 8px;
    font-size: 15px;
    font-weight: 600;
    color: var(--text-color);
  }

  &__input {
    border: 0;
    color: var(--text-color);
    font-size: 16px;
    line-height: 1.25rem;
    border-radius: 10px;
    width: 100%;
    background-color: var(--input_background);
    padding: 8px 8px 8px 13px;
    height: 52px;

    &:focus {
      outline: none !important;
      border: 1px solid #cacaca;
      box-shadow: 0 0 10px #e3e3e3;
    }
  }

  &__textarea {
    border: 0;
    color: var(--text-color);
    font-size: 13px;
    line-height: 1.25rem;
    border-radius: 10px;
    width: 100%;
    background-color: var(--input_background);
    padding: 8px 8px 8px 13px;
    height: 80px;
    overflow: auto;
    resize: none;

    &:focus {
      outline: none !important;
      border: 1px solid #cacaca;
      box-shadow: 0 0 10px #e3e3e3;
    }
  }

  &__inputU {
    border: 0;
    color: var(--text-color);
    font-size: 16px;
    line-height: 1.25rem;
    border-radius: 10px;
    background-color: #fbfbfb;
    padding: 8px 8px 8px 13px;
    height: 52px;
    border: 1px solid #dcd8d8;

    &:focus {
      outline: none !important;
      border: 1px solid #cacaca;
      box-shadow: 0 0 10px #e3e3e3;
    }
  }

  input::placeholder {
    color: var(--tablelabel-color);
  }

  input[type='date']::-webkit-calendar-picker-indicator {
    padding-left: 80px;
    cursor: pointer;
  }

  &__input_error {
    font-size: 12px;
    color: red;
  }

  &__wrapper_input {
    display: flex;
    justify-content: space-between;
    margin-bottom: 8px;
  }

  &__file {
    color: #9ca3b0;
    font-size: 14px;
    line-height: 1.25rem;
    border-radius: 10px;
    display: block;
    width: 100%;
    cursor: pointer;

    &::file-selector-button {
      font-weight: bold;
      color: dodgerblue;
      background-color: var(--bg-color);
      transition: background-color 0.3s ease, color 0.3s ease;

      padding: 0.5em;
      border: thin solid dodgerblue;
      border-radius: 3px;
      padding: 12px;
      border-radius: 10px;
      cursor: pointer;
    }
  }
}

.fileWrapper {
  display: flex;
  font-size: 14px;
  line-height: 16.94px;
  padding: 2px 11px;

  cursor: pointer;
  color: #8b8d97;
  border: 1px solid white;
  border-radius: 8px;

  &:hover {
    border: 1px solid #8b8d97;
    border-radius: 8px;
    box-shadow: 0 0 5px #e8e8e9;
  }
}

.btn__wrapper {
  display: flex;
  justify-content: flex-end;
  margin-top: 10px;

  &__btn {
    color: white;
    background: dodgerblue;
    font-weight: 600;
    border-radius: 10px;
    font-size: 15px;
    padding: 10px 15px 10px 15px;
    cursor: pointer;
    border: 0;

    &:hover {
      background: rgb(4, 109, 213);
    }
  }

  &__disabled {
    color: white;
    background: rgb(129, 129, 129);
    font-weight: 600;
    border-radius: 10px;
    font-size: 15px;
    padding: 10px 15px 10px 15px;
    cursor: pointer;
    border: 0;
  }
}

.loaderWrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-left: 10px;

  .spinner {
    display: block;
    width: 30px;
    height: 30px;
    border: 4px solid #ffffff;
    border-radius: 50%;
    border-top-color: #006eff;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    to {
      -webkit-transform: rotate(360deg);
    }
  }
}

.inputError {
  font-size: 12px;
  color: red;
}

.inputLabel {
  margin-bottom: 8px;
  font-size: 15px;
  font-weight: 600;
  color: #9ca3b0;
}

.input {
  border: 1px solid rgb(153, 153, 153);
  color: var(--tablelabel-color);
  font-weight: 600;
  font-size: 14px;
  line-height: 1.25rem;
  border-radius: 10px;
  background-color: var(--tablebg-color);
  transition: background-color 0.3s ease, color 0.3s ease;
  display: block;
  width: 100%;
  padding: 10px;
}

input::placeholder {
  color: var(--tablelabel-color);
}

.inputError {
  font-size: 12px;
  color: red;
}

.file {
  display: inline-block;
  font-size: 22px;
  padding: 5px 7px;
  border-radius: 10px;
  background-color: #0040dd;
  cursor: pointer;
  color: white;
}

.modal {
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-bottom: 2px solid grey;

  // border-bottom: 2px solid grey;

  &__title {
    font-size: 20px;
    line-height: 28px;
    font-weight: 600;
    color: var(--text-color);
  }

  &__btn {
    background: inherit;
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
    border: 0;
    cursor: pointer;
  }
}

.modal__btn svg path {
  stroke: #646464;
  /* Задайте желаемый цвет */
}

.modal__btn:hover svg path {
  stroke: #3835d1;
  /* Задайте желаемый цвет при наведении */
}

.select__select {
  color: var(--text-color);
  font-size: 15px;
  border: 1px solid white;
  line-height: 1.25rem;
  border-radius: 8px;
  cursor: pointer;
  background-color: #fbfbfb;
  transition: background-color 0.3s ease, color 0.3s ease;
  display: block;
  width: 100%;
  border: 1px solid #dcd8d8;
  // padding: 10px;

  padding: 16px;
  height: 52px;

  &:focus {
    outline: none !important;
    border: 1px solid #efeff0;
    box-shadow: 0 0 5px #e8e8e9;
  }
}

.select__error {
  font-size: 12px;
  font-weight: 400;
  color: red;
  opacity: 0;
  transition: opacity 0.5s ease;
  position: absolute;
  bottom: -20px;
  left: 0;
}

.select__error.show {
  opacity: 1;
}


.checkboxI {
  display: flex;
  align-items: center;
  gap: 10px;
  font-size: 15px;
  font-weight: 500;
  width: 185px;
  color: var(--text-color);
}

/* Hide the default checkbox */
.checkboxI input[type='checkbox'] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  display: inline-block;
  width: 22px;
  height: 20px;
  background-color: #eee;
  border-radius: 4px;
  position: relative;
}

/* When the checkbox is checked, add a blue background */
.checkboxI input[type='checkbox']:checked + .checkmark {
  background-color: #5570f1;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: '';
  position: absolute;
  display: none;
  left: 7px;
  top: 2.5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  transform: rotate(45deg);
}

/* Show the checkmark when checked */
.checkboxI input[type='checkbox']:checked + .checkmark:after {
  display: block;
}

